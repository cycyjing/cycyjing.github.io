(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{279:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# update branchs after change")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote update origin -p/--prune\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("email"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 状态，是否有需要commits文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 前两个表示所有，最后一个具体文件名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A/./"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --cached "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只是把暂存区内容删除")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" unstage\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m ’msg‘\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制提交")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远程仓库地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示把远程拉下来，本地指向远程，远程与本地合并，本地更新为最新版")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase origin master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -u表示之后默认branch，不建议使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PS: 远程 origin/dev。创建完一定要push一次，不然远程无该分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("from branch name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并到当前活动的分支中，例如，现在处于master中，将branch合并到master中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚，打印每一次操作记录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# undo a commit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --soft HEAD^\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete branch")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("local branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("h2",{attrs:{id:"workflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workflow","aria-hidden":"true"}},[s._v("#")]),s._v(" workflow")]),s._v(" "),a("h3",{attrs:{id:"_1-centralized-workflow-集中式工作流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-centralized-workflow-集中式工作流","aria-hidden":"true"}},[s._v("#")]),s._v(" 1. Centralized Workflow 集中式工作流")]),s._v(" "),a("p",[s._v("Like Subversion, the Centralized Workflow uses a central repository to serve as the single point-of-entry for all changes to the project. Instead of "),a("code",[s._v("trunk")]),s._v(", the default development branch is called "),a("code",[s._v("master")]),s._v(" and all changes are committed into this branch. This workflow doesn’t require any other branches besides "),a("code",[s._v("master")]),s._v(".")]),s._v(" "),a("blockquote",[a("p",[s._v("一个中央仓库，第二个人：git pull -rebase origin master")])]),s._v(" "),a("h3",{attrs:{id:"_2-feature-branch-workflow-功能分支工作流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-feature-branch-workflow-功能分支工作流","aria-hidden":"true"}},[s._v("#")]),s._v(" 2. Feature Branch Workflow 功能分支工作流")]),s._v(" "),a("p",[s._v("The core idea behind the Feature Branch Workflow is that all feature development should take place in a dedicated branch instead of the "),a("code",[s._v("master")]),s._v(" branch. This encapsulation makes it easy for multiple developers to work on a particular feature without disturbing the main codebase. It also means the "),a("code",[s._v("master")]),s._v(" branch will never contain broken code, which is a huge advantage for continuous integration environments.")]),s._v(" "),a("blockquote",[a("p",[s._v("管理人删除远程 branch，git branch -r -d origin/[branch name]，git push origin origin [branch name]")]),s._v(" "),a("p",[s._v("Developer 删除本地 branch，先切换到 master，git branch -D [branch name]")])]),s._v(" "),a("h3",{attrs:{id:"_3-gitflow-workflow（大型版本）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-gitflow-workflow（大型版本）","aria-hidden":"true"}},[s._v("#")]),s._v(" 3. Gitflow Workflow（大型版本）")]),s._v(" "),a("p",[s._v("The Gitflow Workflow defines a strict branching model designed around the project release. While somewhat more complicated than the Feature Branch Workflow, this provides a robust framework for managing larger projects.")]),s._v(" "),a("blockquote",[a("p",[s._v("master-release-develop features")]),s._v(" "),a("p",[s._v("release，在发布之前才有")]),s._v(" "),a("p",[s._v("hotfix，维护分支有紧急 bug")])]),s._v(" "),a("h3",{attrs:{id:"_4-forking-workflow（大型版本，两个远程仓库）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-forking-workflow（大型版本，两个远程仓库）","aria-hidden":"true"}},[s._v("#")]),s._v(" 4.Forking Workflow（大型版本，两个远程仓库）")]),s._v(" "),a("p",[s._v("The Forking Workflow is fundamentally different than the other workflows discussed in this tutorial. Instead of using a single server-side repository to act as the “central” codebase, it gives every developer a server-side repository. This means that each contributor has not one, but two Git repositories: a private local one and a public server-side one.")])])},[],!1,null,null,null);t.default=n.exports}}]);